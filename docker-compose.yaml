version: "3.9"

volumes:
  evolution_data:
    name: evolution_data
  n8n_data:
    name: n8n_data

networks:
  web:
    name : web
    driver: bridge

    
services:
  evolution:
    ### Escolha sua versÃ£o: https://hub.docker.com/r/atendai/evolution-api/tags
    container_name: evolution
    image: atendai/evolution-api:v2.1.0 
    restart: always
    ports:
      - 8080:8080
    volumes:
      - evolution_data:/evolution/instances
    networks:
      - web
    env_file:
      - .env-prod
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
        - node.role == manager
      resources:
        limits:
          cpus: "0.5"
          memory: 256M

  n8n:
    container_name: n8n
    image: docker.n8n.io/n8nio/n8n
    restart: always
    ports:
      - "5678:5678"
    environment:
        # Database
      # - DB_TYPE=sqlite

      # - DB_POSTGRESDB_HOST=172.21.0.2
      # - DB_POSTGRESDB_PORT=5432
      # - DB_POSTGRESDB_DATABASE=evolution
      # - DB_POSTGRESDB_USER=markes
      # - DB_POSTGRESDB_PASSWORD=imarkes314
      # self
      - SUBDOMAIN=n8n
      - DOMAIN_NAME=http://127.0.0.1:5678
      - N8N_HOST=${SUBDOMAIN}.${DOMAIN_NAME}
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - NODE_ENV=production
      # - EXECUTIONS_MODE=queue
      - WEBHOOK_URL=http://${SUBDOMAIN}.${DOMAIN_NAME}/
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
      #Logs
      - N8N_LOG_LEVEL=error
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n-local-files:/files
    networks:
      - web
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: '0.3'
          memory: 512M

  nginx:
    image: nginx
    depends_on:
      - evolution
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: "0.5"
          memory: "256M"
      restart_policy:
        condition: on-failure
    networks:
      - web

  # redis:
  #   image: redis:latest
  #   networks:
  #     - web
  #   container_name: redis
  #   environment:
  #     - CACHE_REDIS_ENABLED=true
  #     - CACHE_REDIS_URI=redis://localhost:6379/6
  #       # Prefix serves to differentiate data from one installation to another that are using the same redis
  #     - CACHE_REDIS_PREFIX_KEY=evolution
  #       # Enabling this variable will save the connection information in Redis and not in the database.
  #     - CACHE_REDIS_SAVE_INSTANCES=false
  #       # Local Cache enabled
  #     - CACHE_LOCAL_ENABLED=false
  #   command: >
  #     redis-server --port 6379 --appendonly yes
  #   volumes:
  #     - evolution_redis:/data
  #   ports:
  #     - 6379:6379





















  